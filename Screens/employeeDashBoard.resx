<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblManageAcc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAWtJREFUSEvN1E0rhFEYh/HxLq/ZUIqQtw9AkkKy9AEsKNZ2lLJSWCg2CiUrK1lR
        kkhJsbCxU/IuUmJtiet/Ts00z+PQnGeUq36571nMNOM8J/afKkcfhtCNHKSlPCzjEetYwhHO0InILWIN
        uWZL1I9TTJvNsxK8odBs4fT6MyrM5lE7Du3obBu9dky9Luzb0dkevP8Xjbi1o7NzNNgx9bLwjnyzhdPR
        fUWG2Txqg46j68wX4wbVZvOoDjr/NWYL1wSdsjKzeTYDPWjftYkxO/pXhXtkmy1REfT762eK3AZG7Rhv
        Fgt2jJ7ePHglrGDAjtGbx6od421h3I7+6ZTojfUw6WLT3x1c4RiX0M9Ui5TqwC4eMIECKH1gD+rNZi/D
        STxB36gVP6Yncg4X0HUcPDmu9CAO4hpTesHVCA7gup5/S9/oBMNmC5SJFzSbzb8W3NkxuUp8QHdLFLp9
        P1GKpPQNdKeki97vr4vFvgBgA0fZGPUqFwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="lblHelpTicket.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAAAelJREFUSEvF1U1IFVEYxvFTSEWSWgshJMikRVoLQ7QWCSlauCsQhAgpzNRECkQJ
        lEhcuVN0IS2kCAIlCCQ0aacLjQJXioR9mGCFtQm30v85b5fu6Mwl5wo98IP33AszZ845847bhZzGKH5g
        A29xA3uQdi7hK5qRCV20DHN4/GccOzn4hlI/cq4Qt610GdBN9CSROY4ODKMPxUhOIx5Z6XMZz630OYc3
        Vm5PPT6hB9fQggWM4SSUfjRY6bP1Bnvxy8pgjmEVR/3obw5CN/6AfejCfSRyBGes9MnCdyuDacKglaF5
        hQpoCd5BM1VK8MBKnzt4ZmUw3ei0MjRPccVKt4RTVrpDOGGlOw+drsR/gdzEgJWhmcRF5GEdD/Ea7dDG
        j2ANVQjNBWgZwqJzrXXVEW3DJp6gGjoQ2vhb0PpHphWaRVgOQKdJm6kZai92nOvQI4fNIh86YXpHYkdH
        cAp1fhTMELTmaUcXH0dyL8nGF2hz0456yXuc9SPLXUTtTaxMI/kG99BrZfrRCVlBrh9ZdPYXUeRHMbIf
        esnUAeehvr412pvPmEAN/rnfV0LdU1+mcv2QItqfq5jBLAqQMvpgaFaJD8dOonfmI/RmR+Ylaq2MFXXe
        VM3R/YSeYDkm9aYXiMzhXaBW/T/i3G+V+V39k50OZQAAAABJRU5ErkJggg==
</value>
  </data>
</root>